import streamlit as st
from password_check import check_password # "ุงุณุชูุฑุงุฏ" (Import) "ุงูุฏุงูุฉ" (Function)
import pandas as pd # "ููู" (Important) "ููุฌุฏูู" (Table)

# "ุชุญูู" (Check) ูู "ูููุฉ ุงููุฑูุฑ" (Password) "ุฃููุงู" (First)
if check_password():
    # --- "ุงูุขู" (Now) ูุญู ุขููููุ ุงุนุฑุถ "ุงูุชุทุจูู" (App) ---

    # (ุฃ) ุชููุฆุฉ ุงูุตูุญุฉ (ูุฌุจ ุฃู ูููู ุฃูู ุฃูุฑ ุจุนุฏ ุชุณุฌูู ุงูุฏุฎูู)
    st.set_page_config(
        page_title="ููุฏูุฉ I.R.O.N",
        page_icon="๐", # (ุชู ุชุบููุฑ "ุงูุฃููููุฉ" (Icon))
        layout="wide" 
    )

    # (ุจ) "ุนุฑุถ" (Display) "ุงูุดุนุงุฑ" (Logo)
    try:
        st.image("logo.jpg", width=400) 
    except Exception as e:
        st.warning(f"ูู ูุชู ุงูุนุซูุฑ ุนูู ููู ุงูุดุนุงุฑ 'logo.jpg'.")

    # --- (ุฌ) "ุจุฏุก" (Start) "ุงูุชูุฑูุฑ ุงูููู" (Technical Report) ---

    st.title("I.R.O.N (ูุธุงู ุงูุชุญุณูู ุงูุฐูู ููููุงุฑุฏ ุงููุงุฆูุฉ ุงูุนุฑุงููุฉ)")
    st.subheader("ูููุฌูุฉ ุชุญุณูู (Optimization) ูุจุชูุฑุฉ ูุฅุฏุงุฑุฉ 50 ุนุงูุงู ูู \"ุงูุณููุงุฑูููุงุช ุงูุนุดูุงุฆูุฉ\" (Stochastic) ููุฌูุงู ูุงูููุถุงู")

    st.write("**ุฅุนุฏุงุฏ:** (ุงูุฏูุชูุฑ ุญุงูุธ ูุงุณู ุงุญูุฏ ุงูุฌุจูุฑู)")
    st.write("**ุงูุชุงุฑูุฎ:** 30 ุฃูุชูุจุฑ 2025")
    st.write("---")

    # --- 1. ุงูููุฎุต ุงูุชูููุฐู ---
    st.header("1. ุงูููุฎุต ุงูุชูููุฐู (Executive Summary)")
    st.write("""
    ุชูุงุฌู ููุธููุฉ ุงูููุงุฑุฏ ุงููุงุฆูุฉ ุงูุนุฑุงููุฉ ุชุญุฏูุงู ูุฒุฏูุฌุงู ูุชูุซู ูู "ุงูููุถุงูุงุช" (Floods) ุงููุฏูุฑุฉ ู "ุงูุฌูุงู" (Droughts) ุงูุญุงุฏ. 
    ุฅู "ุงูุณูุงุณุงุช ุงูุชุดุบูููุฉ" (Operating Policies) ุงูุชูููุฏูุฉุ ุงูุชู ุชุฑูุฒ ุนูู "ุงููุญุงูุงุฉ" (Simulation) (ูุซู ููุงุฐุฌ WEAP)ุ 
    ุบุงูุจุงู ูุง ุชูุดู ูู ุฅูุฌุงุฏ "ุญู ุฃูุซู" (Optimal Solution) ููุงุฒู ุจูู ุงูุฃูุฏุงู ุงููุชูุงูุถุฉ: 
    (1) ุชูุจูุฉ ุงูุทูุจ ุงููุงุฆูุ (2) ุฏุฑุก ุงูููุถุงู ุนู ุงููุฏูุ (3) ุชูููู ุงููุงูุฏ ุจุงูุชุจุฎุฑุ ู (4) ุถูุงู ุงูุฎุฒู ุงูุงุณุชุฑุงุชูุฌู.
    """)
    st.write("""
    ูุซุจุช ูุฐุง ุงูุชูุฑูุฑ ุจุงูุฏููู ุงูุฑูุงุถู (ูู ุงููููุฐุฌ V3) ุฃู ูุญุงููุฉ ุชูุจูุฉ 100% ูู ุงูุทูุจ ูุน ุงูุงูุชุฒุงู ุจูููุฏ ุฏุฑุก ุงูููุถุงู ูุงูุฎุฒู ุงูููุช 
    ูู "ูุณุชุญูู ุงูุญู" (Infeasible) ุนูู ุงููุฏู ุงูุทููู (50 ุนุงูุงู).
    """)
    st.write("""
    ูุฐููุ ููุฏู ูุฐุง ุงูุชูุฑูุฑ "ุงูุนูู" (I.R.O.N V7)ุ ููู "ูููุฐุฌ ุชุญุณูู" (Optimization Model) ุชู ุจูุงุคู ุจูุบุฉ Python ูููุชุจุฉ Pyomo. 
    ูุฐุง ุงููููุฐุฌ ูุง ูููู "ุจุงููุญุงูุงุฉ" ุจู ูููู "ุจุงุจุชูุงุฑ" ุงูุณูุงุณุฉ ุงููุซูู ุจููุณู. 
    ูู ุฎูุงู ุชุทุจูู "ุฏุงูุฉ ูุฏู ุฐุงุช ุนููุจุฉ" (Penalized Objective Function) ูุฑูุฏุฉุ 
    ูููู "ุงูุนูู" (I.R.O.N) ุจุญู 50 ุนุงูุงู ูู ุงูุณููุงุฑูููุงุช ุงูุนุดูุงุฆูุฉ (600 ุดูุฑ) ูู 4.1 ุซุงููุฉ ููุท.
    """)
    st.write("""
    ุงููุชุงุฆุฌ "ุญุงุณูุฉ": ูุฌุญ "ุงูุนูู" (I.R.O.N) ูู ุงุจุชูุงุฑ ุณูุงุณุฉ ุชุญูู ุจุบุฏุงุฏ ูู ุงูููุถุงู ุจูุณุจุฉ 100% (0 ุฃุดูุฑ ููุถุงู)ุ 
    ูุชุณุชุฎุฏู ุฎุฒุงู ุงูุซุฑุซุงุฑ "ูุฎุฒุงู ุชุถุญูุฉ" ูุชูููู ุงูุชุจุฎุฑ ุงูุฅุฌูุงูู ุฅูู 51.37 BCMุ 
    ููู ููุณ ุงูููุช "ุชุญุฏุฏ ุญุฌู" ุงูุนุฌุฒ ุงููุงุฆู ุงูุญุชูู (ูู ุณููุงุช ุงูุฌูุงู) ุจู 900.22 BCM. 
    ูุฐู ุงููููุฌูุฉ ุชูุฏู ูุตูุงุน ุงููุฑุงุฑ ุฃุฏุงุฉ "ุฐููุฉ" ู "ูุนุงูุฉ" ููุงูุชูุงู ูู "ุฑุฏ ุงููุนู" ุฅูู "ุงูุฅุฏุงุฑุฉ ุงูุงุณุชุจุงููุฉ ุงูุฐููุฉ".
    """)

    # --- 2. ุงูููุฏูุฉ ---
    st.header("2. ุงูููุฏูุฉ (Introduction)")
    st.write("""
    ุชุนุชูุฏ ุงูุฅุฏุงุฑุฉ ุงูุชูููุฏูุฉ ููุณุฏูุฏ ูุงูุฎุฒุงูุงุช ูู ุงูุนุฑุงู ุนูู "ููุญููุงุช ุชุดุบูู" (Rule Curves) ุซุงุจุชุฉ ุฃู ููุงุฐุฌ "ูุญุงูุงุฉ" (Simulation) ูุซู WEAP. 
    ุชุณุฃู ูุฐู ุงูููุงุฐุฌ "ูุงุฐุง ููุ" (What-if): "ูุงุฐุง ูู ูููุง ุจุฅุทูุงู 2 BCM ูู ุงูููุตูุ". 
    ูุฐู ุงููููุฌูุฉ "ุชูุงุนููุฉ" (Reactive) ูุชุนุชูุฏ ุนูู "ุชุฎููู" (Guesswork) ุงููููุฏุณ ูุฅูุฌุงุฏ ุณูุงุณุฉ ุฌูุฏุฉ.
    """)
    st.write("""
    ููู ุงูููุธููุฉ ุงูุนุฑุงููุฉ ุชูุงุฌู "ุตุฑุงุนุงู" (Conflict) ูุนูุฏุงู:
    """)
    st.markdown("""
    * ูู "ุฃุดูุฑ ุงูููุถุงู"ุ ูุฌุจ ุชุญููู ูููุงุฑุงุช ุงูุฃูุชุงุฑ ุงูููุนุจุฉ ูุญูุงูุฉ ุจุบุฏุงุฏุ ูููู ูุฐุง ุงูุชุญููู (ุฅูู ุฎุฒุงูุงุช ุถุญูุฉ ูุซู ุงูุซุฑุซุงุฑ) ูุคุฏู ุฅูู "ูุงูุฏ ูุงุฆู ุจุงูุชุจุฎุฑ".
    * ูู "ุฃุดูุฑ ุงูุฌูุงู"ุ ูุฌุจ ุชูุจูุฉ ุงูุทูุจ ุงููุงุฆูุ ูููู ูุฐุง ูุฏ ูุคุฏู ุฅูู ุงุณุชูุฒุงู ุงูุฎุฒุงูุงุช ุงูุงุณุชุฑุงุชูุฌูุฉ (ูุซู ุงูููุตู) ุฅูู ูุง ุฏูู "ุงูุฎุฒู ุงูููุช" (S_Min).
    """)
    st.write("""
    ููุฏ ุฃุซุจุช ูููุฐุฌูุง ุงูุฃููู (IRON_V3) ุฃู ุงูุงูุชุฒุงู ุจุฌููุน ูุฐู ุงููููุฏ "ุจุดูู ุตุงุฑู" ูู ูุณุชุญูู ุฑูุงุถูุงู (Infeasible). 
    ูุฐุง ูุนูู ุฃู "ุงูุณูุงุณุงุช ุงูุญุงููุฉ" ูุญููู ุนูููุง ุจุงููุดู ุนูุฏ ููุงุฌูุฉ "ุณููุงุฑูู ูุชุทุฑู" (Extreme Event).
    """)
    st.write("""
    ูุฏู ูุฐุง ุงูุชูุฑูุฑ ูู ุชูุฏูู "ูููุฌูุฉ ุจุฏููุฉ": ูููุฐุฌ "ุชุญุณูู" (Optimization) ูุณุฃู "ูุง ูู ุงูุฃูุถูุ" (What's optimal?). 
    ูููุฐุฌ "ูููุฑ" ููุจุชูุฑ ุงูุณูุงุณุฉ ุงููุซูู ุงูุชู ุชูุงุฒู ุจูู ูู ูุฐู ุงูุฃูุฏุงู ุงููุณุชุญููุฉ.
    """)

    # --- 3. ุงููููุฌูุฉ ---
    st.header("3. ุงููููุฌูุฉ (Methodology: The I.R.O.N Model)")
    st.write("""
    ุจุฏูุงู ูู WEAPุ ูููุง ุจุจูุงุก "ุงูุนูู" (I.R.O.N) ุจุงุณุชุฎุฏุงู Pythonุ ููู ูุบุฉ ุจุฑูุฌูุฉ ูููุฉุ ูููุชุจุฉ Pyomoุ 
    ููู "ูุบุฉ ููุฐุฌุฉ" (Modeling Language) ูุชุฎุตุตุฉ ูู ุงูุชุญุณูู. 
    (ููุงุญุธุฉ: ุงููููุฐุฌ ุงูุญุงูู V10 ูุณุชุฎุฏู ูุญุฑู "GLPK" ุงูุฎุทูุ ูููุณ "Ipopt" ุบูุฑ ุงูุฎุทู ุงููุฐููุฑ ูู ูุฐุง ุงูุชูุฑูุฑ ุงููุฏูู).
    """)
    st.write("""
    ูููู "ุฐูุงุก" (I.R.O.N) ูู ููุทุชูู ุฃุณุงุณูุชูู:
    """)
    st.subheader("3.1. ุงููููุฏ ุงููุฑูุฉ (Flexible Constraints)")
    st.write("""
    ูู ุงูููุงุฐุฌ ุงูุชูููุฏูุฉุ "ููุฏ ุชูุจูุฉ ุงูุทูุจ" (Demand Constraint) ูู "ููุฏ ุตุงุฑู" (Hard Constraint)ุ ูุซู:
    `Check_Baghdad >= 0`
    ูุฐุง ุงูููุฏ ูู ุงูุฐู ุชุณุจุจ ูู "ูุดู" ูููุฐุฌ V3 (Infeasibility).
    """)
    st.write("""
    ูู V4 (ูุงูุฅุตุฏุงุฑุงุช ุงูุฃุญุฏุซ)ุ ูููุง "ุจุฅุฑุฎุงุก" (Relaxing) ูุฐุง ุงูููุฏ ุนู ุทุฑูู ุงุจุชูุงุฑ "ูุชุบูุฑ ุนุฌุฒ" (Deficit Variable) (ูุซู `Shortage_Baghdad`):
    `Check_Baghdad + Shortage_Baghdad >= 0`
    ูุฐุง ูุณูุญ ูููููุฐุฌ "ุจุงููุดู ุจุฐูุงุก". ูููู ุฃู ูุตุจุญ Check_Baghdad ุณุงูุจุงู (ุฃู ูุญุฏุซ ุนุฌุฒ)ุ 
    ูููู ููุท ุฅุฐุง ูุงู "ูุชุบูุฑ ุงูุนุฌุฒ" (Deficit variable) ุณูุบุทู ูุฐุง ุงููุดู.
    """)
    st.subheader("3.2. ุฏุงูุฉ ุงููุฏู ุฐุงุช ุงูุนููุจุฉ (The Penalized Objective Function)")
    st.write("""
    ุจูุฌุฑุฏ ุฃู "ุณูุญูุง" ุจุญุฏูุซ ุงูุนุฌุฒุ ููู ูุถูู ุฃู "ุงูุนูู" (I.R.O.N) ูู ูุชุณุจุจ ุจุนุฌุฒ "ุฅูุง ุฅุฐุง ูุงู ูุถุทุฑุงู"ุ
    ุงูุญู ูู "ุฏุงูุฉ ุงููุฏู" (Objective Function). "ุงููุฏู" ูู ูุนุฏ "ุชูููู ุงูุชุจุฎุฑ" ููุทุ ุจู ุฃุตุจุญ:
    **ุงููุฏู = ุชูููู ( ุฅุฌูุงูู ุงูุชุจุฎุฑ + (ุฅุฌูุงูู ุงูุนุฌุฒ * 1000) )**
    """)
    st.write("""
    ูุญู "ูุนุงูุจ" (Penalize) ูู (1 BCM) ูู ุงูุนุฌุฒ ุจู "1000 ููุทุฉ"ุ ุจูููุง "ุงูุชุจุฎุฑ" ูููู "ููุทุฉ ูุงุญุฏุฉ" ููุท. 
    ูุฐุง ูุฌุจุฑ "ุงูุนูู" (I.R.O.N) ุนูู "ุชุฌูุจ ุงูุนุฌุฒ ุจุฃู ุซูู"ุ ููุนุชุจุฑู "ุงูุฎูุงุฑ ุงูุฃุฎูุฑ" (Last Resort) ููุท 
    ูุชุฌูุจ "ูุงุฑุซุฉ" (ูุซู ูุณุฑ ููุฏ S_Min ุฃู ุฅุบุฑุงู ุจุบุฏุงุฏ).
    """)

    # --- 4. ุงูุจูุงูุงุช ูุงููุฏุฎูุงุช ---
    st.header("4. ุงูุจูุงูุงุช ูุงููุฏุฎูุงุช (Data Inputs)")
    st.write("ุชู ุชุบุฐูุฉ ุงููููุฐุฌ ุจููุนูู ูู ุงูุจูุงูุงุช ููุญุงูุงุฉ 50 ุนุงูุงู (600 ุดูุฑ):")
    st.subheader("4.1. ุงููุฏุฎูุงุช ุงูุซุงุจุชุฉ (Static Inputs)")
    st.markdown("""
    * **ุงูุฎุฒู ุงูุฃูุตู ูุงูููุช (S_Max, S_Min):** ุชู ุชุนุฑูู ุงูุญุฏูุฏ ุงูุชุดุบูููุฉ ูุฌููุน ุงูุฎุฒุงูุงุช (ุงูููุตูุ ุฏููุงูุ ุญุฏูุซุฉุ ุงูุซุฑุซุงุฑุ ุฅูุฎ).
    * **ูุนุงููุงุช ุงูุชุจุฎุฑ (E_Coeff):** (ููุงุญุธุฉ: ุชู "ุชุจุณูุท" (Simplified) ูุฐุง "ุงูุฌุงูุจ" (Aspect) ูู "ุงููููุฐุฌ" (Model) "ุงูุญุงูู" (Current) V10 "ุงูุฎุทู" (Linear)).
    * **ูููุฏ ุงูุชุฏูู (Flow Constraints):** ุชู ุชุนุฑูู ุงูููุฏ ุงูุญุฑุฌ ูุชุฏูู ุจุบุฏุงุฏ (Baghdad_River_Capacity = 4.0 BCM/Month).
    """)
    st.subheader("4.2. ุงููุฏุฎูุงุช ุงูุนุดูุงุฆูุฉ (Stochastic Inputs)")
    st.write("""
    ุจูุง ุฃูู ูุง ุชูุฌุฏ ุจูุงูุงุช ุชุงุฑูุฎูุฉ ูุชูู ุนูููุงุ ูููุง "ุจุชูููุฏ" (Generating) 50 ุนุงูุงู ูู "ุงูุณููุงุฑูููุงุช" ููุญุงูุงุฉ ุงููุงูุน:
    """)
    st.markdown("""
    * **ุงูุทูุจุงุช (Demands):** ุชู "ุชูุฑุงุฑ" (Repeating) "ููุท ุงูุทูุจ ุงูููุณูู" (12 ุดูุฑุงู) 50 ูุฑุฉ (ุฃู "ุชุนุฑููู" (Defined) "ูุญุฏ" (Limit) "ุฃุฏูู" (Minimum) "ุซุงุจุช" (Constant)).
    * **ุงููุงุฑุฏุงุช (Inflows):** ุชู "ุชูููุฏ" (Generating) 50 "ุณูุฉ" (Years) ูู "ุงููุงุฑุฏุงุช" (Inflows) "ุจูุงุกู" (Based) ุนูู "ุชูุฒูุน ุงุญุชูุงูู" (Probability Distribution) "ุนุดูุงุฆู" (Random) "ูุถูุงู" (Ensure) "ุงุฎุชุจุงุฑ" (Testing) "ุงูุธุฑูู" (Conditions) "ุงููุชุทุฑูุฉ" (Extreme).
    """)

    # --- 5. ุงููุชุงุฆุฌ ูุงูุชุญููู ---
    st.header("5. ุงููุชุงุฆุฌ ูุงูุชุญููู (Results and Analysis)")
    st.write("""
    ูุฌุญ "ุงูุนูู" (I.R.O.N) ูู ุฅูุฌุงุฏ "ุญู ุฃูุซู" (Optimal Solution) ูู 50 ุนุงูุงู. 
    "ุงูุฑุณูู ุงูุจูุงููุฉ" (Plots) "ุงูุชูุงุนููุฉ" (Interactive) "ุงูููุฌูุฏุฉ" (Available) "ูู" (In) "ุงูุตูุญุงุช" (Pages) "ุงูุฃุฎุฑู" (Other) "ุชูุฎุต" (Summarize) "ุงูุณูุงุณุฉ ุงูุฐููุฉ" (Smart policy) "ุงูุชู" (That) "ุงุจุชูุฑูุง" (It created).
    """)

    st.subheader("5.1. ุงููุชูุฌุฉ ุงูุฃููู: ูุฌุงุญ 100% ูู ุฏุฑุก ุงูููุถุงู")
    st.write("""
    "ุงูุชุญููู" (Analysis) "ูู" (In) "ุตูุญุฉ" (Page) "ููุญุฉ ุงูุชุญูู" (Dashboard) "ูุซุจุช" (Proves) "ูุฌุงุญ" (Success) "ุงููููุฐุฌ" (Model) "ูู" (In) "ุฅุฏุงุฑุฉ" (Managing) "ุงูููุถุงูุงุช" (Floods) "ุงูุนุดูุงุฆูุฉ" (Random) "ุฏูู" (Without) "ุชุฌุงูุฒ" (Exceeding) "ุงูุญุฏ" (Limit) "ุงูุญุฑุฌ" (Critical) "ูุจุบุฏุงุฏ" (Baghdad).
    """)
    
    # st.image("IRON_V7_Plot_1_Baghdad_Flow.png") # (ููู ุงูุตูุฑุฉ ุบูุฑ ููุฌูุฏ ุญุงููุงู)

    st.subheader("5.2. ุงููุชูุฌุฉ ุงูุซุงููุฉ: ุงููุฑููุฉ ูู ุฅุฏุงุฑุฉ ุงูุฌูุงู")
    st.write("""
    "ุงูุฑุณู ุงูุจูุงูู" (Plot) "ููุนุฌุฒ" (Deficit) "ูุซุจุช" (Proves) "ุฐูุงุก" (Intelligence) "ุงููููุฐุฌ" (Model). "ุงูุนุฌุฒ" (Deficit) "ูุง" (Does not) "ูุธูุฑ" (Appear) "ุฅูุง" (Except) "ุนูุฏูุง" (When) "ุชููู" (Are) "ุงููุงุฑุฏุงุช" (Inflows) "ูู" (In) "ุฃุฏูู" (Lowest) "ูุณุชููุงุชูุง" (Levels) (ูู "ุณููุงุช" (Years) "ุงูุฌูุงู" (Drought) "ุงููุงุณูุฉ" (Severe)).
    """)
    
    # st.image("IRON_V7_Plot_2_Deficit_vs_Stress.png") # (ููู ุงูุตูุฑุฉ ุบูุฑ ููุฌูุฏ ุญุงููุงู)

    st.subheader("5.3. ุงููุชูุฌุฉ ุงูุซุงูุซุฉ: ุณูุงุณุฉ ุชูููู ุงูุชุจุฎุฑ (ุงูุฎุฒู ุงูุฐูู)")
    st.write("""
    "ุงูุฑุณูู ุงูุจูุงููุฉ" (Plots) "ููุฎุฒู" (Storage) "ุชูุถุญ" (Illustrate) "ููู" (How) "ูุฑุฑ" (Decided) "ุงูุนูู" (I.R.O.N) "ุชุฎุฒูู" (Store) "ุงูููุงู" (Water) "ููููู" (Reduce) "ุงูุชุจุฎุฑ" (Evaporation) (ุนู "ุทุฑูู" (Way) "ุชูุถูู" (Preferring) "ุงูุฎุฒุงูุงุช" (Reservoirs) "ุงูุนูููุฉ" (Deep) "ุนูู" (Over) "ุงูุถุญูุฉ" (Shallow)).
    """)
    
    # st.image("IRON_V7_Plot_3_Storage_Policy.png") # (ููู ุงูุตูุฑุฉ ุบูุฑ ููุฌูุฏ ุญุงููุงู)

    # --- 6. ููุฎุต ุงููุชุงุฆุฌ ---
    st.header("6. ููุฎุต ุงููุชุงุฆุฌ (KPIs Table)")
    st.write("""
    "ุงูุฌุฏูู" (Table) "ุงูุชุงูู" (Following) "ููุฎุต" (Summarizes) "ุงููุชุงุฆุฌ ุงูุฅุฌูุงููุฉ" (Overall results) "ูุณูุงุณุฉ" (Policy) (I.R.O.N) "ุนูู" (Over) "ูุฏู" (Span) 50 "ุนุงูุงู" (Years) (600 "ุดูุฑ" (Months)). 
    (ููุงุญุธุฉ: "ุงูุฃุฑูุงู" (Numbers) "ููุง" (Here) "ูู" (From) "ุงูุชูุฑูุฑ" (Report) "ุงููุฏูู" (Old) V7 "ููุฏ" (And may) "ุชุฎุชูู" (Differ) "ุนู" (From) "ูุชุงุฆุฌ" (Results) "ุงููููุฐุฌ" (Model) "ุงูุญู" (Live) V10 "ูู" (In) "ุตูุญุฉ" (Page) "ููุญุฉ ุงูุชุญูู" (Dashboard)).
    """)

    # "ุฅูุดุงุก" (Create) "ุงูุฌุฏูู" (Table) "ุงูุฎุงุต" (Special) "ุจู" (by) KPIs
    kpi_data = {
        "ุงููุคุดุฑ (KPI)": [
            "ุฅุฌูุงูู ุงูุนุฌุฒ ุงููุนูู", 
            "ุฅุฌูุงูู ุงูุชุจุฎุฑ ุงููุนูู", 
            "ุฃุดูุฑ ุงูููุถุงู ูู ุจุบุฏุงุฏ", 
            "ุฅุฌูุงูู ุงูุชุญููู ููุซุฑุซุงุฑ (X7)", 
            "ุงูุฅุนุงุฏุฉ ูู ุงูุซุฑุซุงุฑ ูุฏุฌูุฉ (X9)", 
            "ุฒูู ุงูุญู (CPU Time)"
        ],
        "ุงููููุฉ": [900.22, 51.37, 0, 277.68, 245.69, "4.117 (V7)"],
        "ุงููุญุฏุฉ": ["BCM", "BCM", "ุดูุฑ", "BCM", "BCM", "ุซุงููุฉ"],
        "ุงููุตู (ุงูุณูุงุณุฉ ุงูุชู ุงุจุชูุฑูุง I.R.O.N)": [
            "\"ุงูุซูู\" ุงูุญุชูู ููุฌูุงู. ูุฐุง ูู \"ุฃูู ุนุฌุฒ ูููู\" ูููุฌุงุฉ ุจู 50 ุนุงูุงู ูู ุงูุฅุฌูุงุฏ.",
            "\"ุงููุงูุฏ\" ุงูุฃุฏูู. ูุฐุง ูู \"ุฃูู ุชุจุฎุฑ ูููู\" ุจุนุฏ ุชุทุจูู ุณูุงุณุฉ ุงูุฎุฒู ุงูุฐููุฉ (ุงูุซุฑุซุงุฑ ููุงุจู ุงูููุตู).",
            "ูุฌุงุญ 100%. ุชู ุฏุฑุก ุงูููุถุงู ุจุงููุงูู ุนู ุจุบุฏุงุฏ ููุฏุฉ 600 ุดูุฑ.",
            "\"ุฃุฏุงุฉ ุฏุฑุก ุงูููุถุงู\". ูููุฉ ุงูููุงู ุงูุชู ุชู \"ุงูุชุถุญูุฉ ุจูุง\" ูุญูุงูุฉ ุจุบุฏุงุฏ.",
            "\"ุฃุฏุงุฉ ุฅุฏุงุฑุฉ ุงูุทูุจ\". ูููุฉ ุงูููุงู ุงูุชู ุชู ุงุณุชุนุงุฏุชูุง ูู ุงูุซุฑุซุงุฑ ูุชูุจูุฉ ุงูุทูุจ ูู ุงูุตูู.",
            "\"ุงูููุงุกุฉ\". ุณุฑุนุฉ \"ุงูุนูู\" (I.R.O.N) ูู ุญู 50 ุนุงูุงู (28,200 ูุชุบูุฑ)."
        ]
    }
    kpi_df = pd.DataFrame(kpi_data)

# "ุงูุฅุตูุงุญ" (FIX) V10.28: "ุชุญููู" (Convert) "ุนููุฏ" (Column) "ุงููููุฉ" (Value) "ุฅูู" (To) "ูุต" (String) "ูุชุฌูุจ" (Avoid) "ุฎุทุฃ" (Error) Arrow
kpi_df['ุงููููุฉ'] = kpi_df['ุงููููุฉ'].astype(str) 

st.dataframe(kpi_df, width='stretch', hide_index=True) # "ุฅุตูุงุญ" (Fix) "ุงูุชุญุฐูุฑ" (Warning) "ุฃูุถุงู" (Also)

    # --- 7. ุงูุฎูุงุตุฉ ูุงูุชูุตูุงุช ---
    st.header("7. ุงูุฎูุงุตุฉ ูุงูุชูุตูุงุช (Conclusion & Recommendation)")
    st.write("""
    ููุฏ ูุฌุญูุง ูู ุจูุงุก "ูููุฐุฌ ุชุญุณูู" (Optimization Model) ูุซุจุช ุชูููู ุนูู "ููุงุฐุฌ ุงููุญุงูุงุฉ" (Simulation Models) ุงูุชูููุฏูุฉ (ูุซู WEAP) 
    ูู ุฅุฏุงุฑุฉ ููุธููุฉ ูุนูุฏุฉ ููุชุถุงุฑุจุฉ ุงูุฃูุฏุงู.
    ูููุฐุฌ I.R.O.N V7 ููุณ ูุฌุฑุฏ "ูุญุงูู" (Simulator) ุจู ูู "ุนูู" (Brain) ูุจุชูุฑ ุงูุณูุงุณุฉ ุงููุซูู.
    """)
    st.write("""
    ููุตู "ุตูุงุน ุงููุฑุงุฑ" ูู ุงููุฒุงุฑุฉ ุจุชุจูู "ูููุฌูุฉ ุงูุชุญุณูู" (Optimization Methodology) ูุฐู ูุฃุฏุงุฉ ุฃุณุงุณูุฉ ูู ุงูุชุฎุทูุท ุงูุงุณุชุฑุงุชูุฌู ููููุงุฑุฏ ุงููุงุฆูุฉ. 
    ููุฏ ุฃุซุจุช "ุงูุนูู" (I.R.O.N) ูุฏุฑุชู ุนูู:
    """)
    st.markdown("""
    * **ุชุญุฏูุฏ ุญุฌู ุงููุดููุฉ:** ุชูุฏูุฑ "ุงูุนุฌุฒ ุงูุญุชูู" ุจุฏูุฉ.
    * **ุถูุงู ุงูุฃูุงู:** ุชุตููู ุณูุงุณุฉ ุชููุน ุงูููุถุงูุงุช (0 ุฃุดูุฑ ููุถุงู).
    * **ุฒูุงุฏุฉ ุงูููุงุกุฉ:** ุชูููู ุงูุชุจุฎุฑ ุนู ุทุฑูู ุณูุงุณุงุช ุฎุฒู ุฐููุฉ.
    * **ุงูุณุฑุนุฉ:** ุชูููุฑ "ุฅุฌุงุจุงุช ูุซูู" ูู 50 ุนุงูุงู ูุงุฏูุฉ ูู "ุซูุงูู" (Seconds) (ุฃู "ุฏูุงุฆู" (Minutes) "ุญุณุจ" (Depending on) "ุงูุฎุงุฏู" (Server)) "ููุท" (Only).
    """)

    # --- 8. ุงููุฑุงุฌุน ุงูุนูููุฉ ---
    st.header("8. ุงููุฑุงุฌุน ุงูุนูููุฉ (References)")
    st.markdown("""
    * Hart, W. E., Laird, C. D., Watson, J. P., & Woodruff, D. L. (2012). Pyomo: modeling and solving mathematical programs in Python. Springer Science & Business Media.
    * Wรคchter, A., & Biegler, L. T. (2006). On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming. Mathematical programming, 106(1), 25-57. (ุงููุฑุฌุน ุงูุฎุงุต ุจูุญุฑู Ipopt).
    * Labadie, J. W. (2004). Optimal operation of multireservoir systems: State-of-the-art review. Journal of water resources planning and management, 130(2), 93-111.
    """)
